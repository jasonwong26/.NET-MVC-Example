@model KeyRequest.ViewModels.RoomForm

@{
    ViewBag.Title = "Create Room";
}

<h2>@ViewBag.Title</h2>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/RoomForm/data-entry.js"></script>
}

@using (Html.BeginForm())
{ @Html.AntiForgeryToken()  @Html.ValidationSummary(true)  <fieldset class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.Description, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", placeholder = "Room Description" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Location, new { @class = "form-control", placeholder = "Room Location" })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">@Html.IdFor(Model => Model.Available)</label>
        <div class="col-sm-10">
            <div class="btn-group" data-toggle="buttons">
                <label class="btn btn-default @if(Model.Available) { @("active") }" for=@Html.IdFor(model => model.Available)>
                    @Html.CheckBoxFor(model => model.Available, new { checkedicon = "glyphicon-ok", uncheckedicon = "glyphicon-remove" })
                    <span class="glyphicon @if(Model.Available) { @("glyphicon-ok") } else { @("glyphicon-remove") }"></span>
                </label>
            </div>

            @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="panel panel-info">
        <div class="panel-heading">Keys:</div>
        <div class="table-responsive">
            <table id="keys" class="table">
                <thead>
                    <tr>
                        <th>Label</th>
                        <th>
                            <button type="button" class="btn btn-success" aria-label="Add">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Keys.Count; i++)
                    {
                        @Html.EditorFor(x => Model.Keys[i])
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-primary pull-right">Submit</button>
        </div>
    </div>
</fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@*
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Available)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Available)
            @Html.ValidationMessageFor(model => model.Available)
        </div>
        <div class="editor-field">
            <table>
                <thead>
                    <tr>
                        <th>Keys</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Keys.Count; i++)
                    { 
                    <tr>
                        @Html.HiddenFor(x => Model.Keys[i].RoomFormID)
                        @Html.HiddenFor(x => Model.Keys[i].KeyFormID)
                        <td>@Html.EditorFor(x => Model.Keys[i].Tag)
                            @Html.ValidationMessageFor(modelItem => Model.Keys[i].Tag)
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
